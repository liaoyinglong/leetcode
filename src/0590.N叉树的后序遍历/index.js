"use strict";
/**
 给定一个 N 叉树，返回其节点值的后序遍历。

 例如，给定一个 3叉树 :
           1
     /     \  \
   3       2   4
 /   \
5     6
 返回其后序遍历: [5,6,3,2,4,1].
 */
/**
 * @param {Node} root
 * @return {number[]}
 */
const postorder = function (root) {
    if (!root)
        return [];
    let arr = root.children.reduce((arr, cur) => {
        return [...arr, ...postorder(cur)];
    }, []);
    arr.push(root.val);
    return arr;
};
const node = {
    children: [
        {
            children: [{ children: [], val: 5 }, { children: [], val: 6 }],
            val: 3
        },
        { children: [], val: 2 },
        { children: [], val: 4 }
    ],
    val: 1
};
console.log(postorder(node));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7R0FVRztBQWNIOzs7R0FHRztBQUNILE1BQU0sU0FBUyxHQUFHLFVBQVMsSUFBYztJQUN2QyxJQUFJLENBQUMsSUFBSTtRQUFFLE9BQU8sRUFBRSxDQUFDO0lBQ3JCLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFXLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ3BELE9BQU8sQ0FBQyxHQUFHLEdBQUcsRUFBRSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3JDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNQLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ25CLE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyxDQUFDO0FBRUYsTUFBTSxJQUFJLEdBQUc7SUFDWCxRQUFRLEVBQUU7UUFDUjtZQUNFLFFBQVEsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUM5RCxHQUFHLEVBQUUsQ0FBQztTQUNQO1FBQ0QsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUU7UUFDeEIsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUU7S0FDekI7SUFDRCxHQUFHLEVBQUUsQ0FBQztDQUNQLENBQUM7QUFFRixPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDIn0=