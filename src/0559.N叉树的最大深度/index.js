"use strict";
/**
 给定一个 N 叉树，找到其最大深度。

 最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。
 */
/**
 * @param {Node} root
 * @return {number}
 */
const maxDepth0559 = function (root) {
    if (!root)
        return 0;
    if (!root.children.length)
        return 1;
    return 1 + Math.max(...root.children.map(maxDepth0559));
};
let tree0559 = {
    val: 1,
    children: [
        { val: 2, children: [{ val: 3, children: [] }] },
        { val: 4, children: [{ val: 5, children: [] }] },
        {
            val: 6,
            children: [
                { val: 7, children: [{ val: 8, children: [{ val: 9, children: [] }] }] }
            ]
        }
    ]
};
console.log(maxDepth0559(tree0559)); // 3
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7R0FJRztBQWNIOzs7R0FHRztBQUNILE1BQU0sWUFBWSxHQUFHLFVBQVMsSUFBYztJQUMxQyxJQUFJLENBQUMsSUFBSTtRQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU07UUFBRSxPQUFPLENBQUMsQ0FBQztJQUNwQyxPQUFPLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztBQUMxRCxDQUFDLENBQUM7QUFFRixJQUFJLFFBQVEsR0FBYTtJQUN2QixHQUFHLEVBQUUsQ0FBQztJQUNOLFFBQVEsRUFBRTtRQUNSLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUU7UUFDaEQsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRTtRQUNoRDtZQUNFLEdBQUcsRUFBRSxDQUFDO1lBQ04sUUFBUSxFQUFFO2dCQUNSLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTthQUN6RTtTQUNGO0tBQ0Y7Q0FDRixDQUFDO0FBRUYsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUkifQ==